// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`npmDiffCommand() failure 1`] = `
"diff --git a/package.json b/package.json
index v4.2.3..v4.2.4 100644
--- a/package.json
+++ b/package.json
@@ -3,5 +3,5 @@
     \\"author\\": \\"Microsoft Corp.\\",
     \\"homepage\\": \\"https://www.typescriptlang.org/\\",
-    \\"version\\": \\"4.2.3\\",
+    \\"version\\": \\"4.2.4\\",
     \\"license\\": \\"Apache-2.0\\",
     \\"description\\": \\"TypeScript is a language for application scale JavaScript development\\",
diff --git a/lib/tsc.js b/lib/tsc.js
index v4.2.3..v4.2.4 100644
--- a/lib/tsc.js
+++ b/lib/tsc.js
@@ -66,5 +66,5 @@
 (function (ts) {
     ts.versionMajorMinor = \\"4.2\\";
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     var NativeCollections;
     (function (NativeCollections) {
@@ -4400,5 +4400,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -4407,4 +4406,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -38475,5 +38475,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
diff --git a/lib/tsserver.js b/lib/tsserver.js
index v4.2.3..v4.2.4 100644
--- a/lib/tsserver.js
+++ b/lib/tsserver.js
@@ -97,5 +97,5 @@
     /** The version of the TypeScript compiler release */
     // eslint-disable-next-line @typescript-eslint/no-inferrable-types
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     /* @internal */
     var Comparison;
@@ -7006,5 +7006,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -7013,4 +7012,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -46984,5 +46984,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
@@ -148420,5 +148422,5 @@
         SignatureObject.prototype.getJsDocTags = function () {
             if (this.jsDocTags === undefined) {
-                this.jsDocTags = this.declaration ? getJsDocTags([this.declaration], this.checker) : [];
+                this.jsDocTags = this.declaration ? getJsDocTagsOfSignature(this.declaration, this.checker) : [];
             }
             return this.jsDocTags;
@@ -148434,13 +148436,11 @@
         return ts.getJSDocTags(node).some(function (tag) { return tag.tagName.text === \\"inheritDoc\\"; });
     }
-    function getJsDocTags(declarations, checker) {
-        var tags = ts.JsDoc.getJsDocTagsFromDeclarations(declarations);
-        if (tags.length === 0 || declarations.some(hasJSDocInheritDocTag)) {
-            ts.forEachUnique(declarations, function (declaration) {
-                var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { return symbol.getJsDocTags(); });
-                if (inheritedTags) {
-                    tags = __spreadArray(__spreadArray([], inheritedTags), tags);
-                }
-            });
+    function getJsDocTagsOfSignature(declaration, checker) {
+        var tags = ts.JsDoc.getJsDocTagsFromDeclarations([declaration]);
+        if (tags.length === 0 || hasJSDocInheritDocTag(declaration)) {
+            var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { var _a; return ((_a = symbol.declarations) === null || _a === void 0 ? void 0 : _a.length) === 1 ? symbol.getJsDocTags() : undefined; });
+            if (inheritedTags) {
+                tags = __spreadArray(__spreadArray([], inheritedTags), tags);
+            }
         }
         return tags;
diff --git a/lib/tsserverlibrary.js b/lib/tsserverlibrary.js
index v4.2.3..v4.2.4 100644
--- a/lib/tsserverlibrary.js
+++ b/lib/tsserverlibrary.js
@@ -291,5 +291,5 @@
     /** The version of the TypeScript compiler release */
     // eslint-disable-next-line @typescript-eslint/no-inferrable-types
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     /* @internal */
     var Comparison;
@@ -7200,5 +7200,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -7207,4 +7206,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -47178,5 +47178,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
@@ -148989,5 +148991,5 @@
         SignatureObject.prototype.getJsDocTags = function () {
             if (this.jsDocTags === undefined) {
-                this.jsDocTags = this.declaration ? getJsDocTags([this.declaration], this.checker) : [];
+                this.jsDocTags = this.declaration ? getJsDocTagsOfSignature(this.declaration, this.checker) : [];
             }
             return this.jsDocTags;
@@ -149003,13 +149005,11 @@
         return ts.getJSDocTags(node).some(function (tag) { return tag.tagName.text === \\"inheritDoc\\"; });
     }
-    function getJsDocTags(declarations, checker) {
-        var tags = ts.JsDoc.getJsDocTagsFromDeclarations(declarations);
-        if (tags.length === 0 || declarations.some(hasJSDocInheritDocTag)) {
-            ts.forEachUnique(declarations, function (declaration) {
-                var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { return symbol.getJsDocTags(); });
-                if (inheritedTags) {
-                    tags = __spreadArray(__spreadArray([], inheritedTags), tags);
-                }
-            });
+    function getJsDocTagsOfSignature(declaration, checker) {
+        var tags = ts.JsDoc.getJsDocTagsFromDeclarations([declaration]);
+        if (tags.length === 0 || hasJSDocInheritDocTag(declaration)) {
+            var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { var _a; return ((_a = symbol.declarations) === null || _a === void 0 ? void 0 : _a.length) === 1 ? symbol.getJsDocTags() : undefined; });
+            if (inheritedTags) {
+                tags = __spreadArray(__spreadArray([], inheritedTags), tags);
+            }
         }
         return tags;
diff --git a/lib/typescript.js b/lib/typescript.js
index v4.2.3..v4.2.4 100644
--- a/lib/typescript.js
+++ b/lib/typescript.js
@@ -291,5 +291,5 @@
     /** The version of the TypeScript compiler release */
     // eslint-disable-next-line @typescript-eslint/no-inferrable-types
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     /* @internal */
     var Comparison;
@@ -7200,5 +7200,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -7207,4 +7206,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -47178,5 +47178,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
@@ -148989,5 +148991,5 @@
         SignatureObject.prototype.getJsDocTags = function () {
             if (this.jsDocTags === undefined) {
-                this.jsDocTags = this.declaration ? getJsDocTags([this.declaration], this.checker) : [];
+                this.jsDocTags = this.declaration ? getJsDocTagsOfSignature(this.declaration, this.checker) : [];
             }
             return this.jsDocTags;
@@ -149003,13 +149005,11 @@
         return ts.getJSDocTags(node).some(function (tag) { return tag.tagName.text === \\"inheritDoc\\"; });
     }
-    function getJsDocTags(declarations, checker) {
-        var tags = ts.JsDoc.getJsDocTagsFromDeclarations(declarations);
-        if (tags.length === 0 || declarations.some(hasJSDocInheritDocTag)) {
-            ts.forEachUnique(declarations, function (declaration) {
-                var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { return symbol.getJsDocTags(); });
-                if (inheritedTags) {
-                    tags = __spreadArray(__spreadArray([], inheritedTags), tags);
-                }
-            });
+    function getJsDocTagsOfSignature(declaration, checker) {
+        var tags = ts.JsDoc.getJsDocTagsFromDeclarations([declaration]);
+        if (tags.length === 0 || hasJSDocInheritDocTag(declaration)) {
+            var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { var _a; return ((_a = symbol.declarations) === null || _a === void 0 ? void 0 : _a.length) === 1 ? symbol.getJsDocTags() : undefined; });
+            if (inheritedTags) {
+                tags = __spreadArray(__spreadArray([], inheritedTags), tags);
+            }
         }
         return tags;
diff --git a/lib/typescriptServices.js b/lib/typescriptServices.js
index v4.2.3..v4.2.4 100644
--- a/lib/typescriptServices.js
+++ b/lib/typescriptServices.js
@@ -291,5 +291,5 @@
     /** The version of the TypeScript compiler release */
     // eslint-disable-next-line @typescript-eslint/no-inferrable-types
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     /* @internal */
     var Comparison;
@@ -7200,5 +7200,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -7207,4 +7206,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -47178,5 +47178,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
@@ -148989,5 +148991,5 @@
         SignatureObject.prototype.getJsDocTags = function () {
             if (this.jsDocTags === undefined) {
-                this.jsDocTags = this.declaration ? getJsDocTags([this.declaration], this.checker) : [];
+                this.jsDocTags = this.declaration ? getJsDocTagsOfSignature(this.declaration, this.checker) : [];
             }
             return this.jsDocTags;
@@ -149003,13 +149005,11 @@
         return ts.getJSDocTags(node).some(function (tag) { return tag.tagName.text === \\"inheritDoc\\"; });
     }
-    function getJsDocTags(declarations, checker) {
-        var tags = ts.JsDoc.getJsDocTagsFromDeclarations(declarations);
-        if (tags.length === 0 || declarations.some(hasJSDocInheritDocTag)) {
-            ts.forEachUnique(declarations, function (declaration) {
-                var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { return symbol.getJsDocTags(); });
-                if (inheritedTags) {
-                    tags = __spreadArray(__spreadArray([], inheritedTags), tags);
-                }
-            });
+    function getJsDocTagsOfSignature(declaration, checker) {
+        var tags = ts.JsDoc.getJsDocTagsFromDeclarations([declaration]);
+        if (tags.length === 0 || hasJSDocInheritDocTag(declaration)) {
+            var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { var _a; return ((_a = symbol.declarations) === null || _a === void 0 ? void 0 : _a.length) === 1 ? symbol.getJsDocTags() : undefined; });
+            if (inheritedTags) {
+                tags = __spreadArray(__spreadArray([], inheritedTags), tags);
+            }
         }
         return tags;
diff --git a/lib/typingsInstaller.js b/lib/typingsInstaller.js
index v4.2.3..v4.2.4 100644
--- a/lib/typingsInstaller.js
+++ b/lib/typingsInstaller.js
@@ -86,5 +86,5 @@
     /** The version of the TypeScript compiler release */
     // eslint-disable-next-line @typescript-eslint/no-inferrable-types
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     /* @internal */
     var Comparison;
@@ -6995,5 +6995,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -7002,4 +7001,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -46973,5 +46973,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
"
`;

exports[`npmDiffCommand() success 1`] = `
"diff --git a/package.json b/package.json
index v4.2.3..v4.2.4 100644
--- a/package.json
+++ b/package.json
@@ -3,5 +3,5 @@
     \\"author\\": \\"Microsoft Corp.\\",
     \\"homepage\\": \\"https://www.typescriptlang.org/\\",
-    \\"version\\": \\"4.2.3\\",
+    \\"version\\": \\"4.2.4\\",
     \\"license\\": \\"Apache-2.0\\",
     \\"description\\": \\"TypeScript is a language for application scale JavaScript development\\",
diff --git a/lib/tsc.js b/lib/tsc.js
index v4.2.3..v4.2.4 100644
--- a/lib/tsc.js
+++ b/lib/tsc.js
@@ -66,5 +66,5 @@
 (function (ts) {
     ts.versionMajorMinor = \\"4.2\\";
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     var NativeCollections;
     (function (NativeCollections) {
@@ -4400,5 +4400,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -4407,4 +4406,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -38475,5 +38475,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
diff --git a/lib/tsserver.js b/lib/tsserver.js
index v4.2.3..v4.2.4 100644
--- a/lib/tsserver.js
+++ b/lib/tsserver.js
@@ -97,5 +97,5 @@
     /** The version of the TypeScript compiler release */
     // eslint-disable-next-line @typescript-eslint/no-inferrable-types
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     /* @internal */
     var Comparison;
@@ -7006,5 +7006,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -7013,4 +7012,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -46984,5 +46984,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
@@ -148420,5 +148422,5 @@
         SignatureObject.prototype.getJsDocTags = function () {
             if (this.jsDocTags === undefined) {
-                this.jsDocTags = this.declaration ? getJsDocTags([this.declaration], this.checker) : [];
+                this.jsDocTags = this.declaration ? getJsDocTagsOfSignature(this.declaration, this.checker) : [];
             }
             return this.jsDocTags;
@@ -148434,13 +148436,11 @@
         return ts.getJSDocTags(node).some(function (tag) { return tag.tagName.text === \\"inheritDoc\\"; });
     }
-    function getJsDocTags(declarations, checker) {
-        var tags = ts.JsDoc.getJsDocTagsFromDeclarations(declarations);
-        if (tags.length === 0 || declarations.some(hasJSDocInheritDocTag)) {
-            ts.forEachUnique(declarations, function (declaration) {
-                var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { return symbol.getJsDocTags(); });
-                if (inheritedTags) {
-                    tags = __spreadArray(__spreadArray([], inheritedTags), tags);
-                }
-            });
+    function getJsDocTagsOfSignature(declaration, checker) {
+        var tags = ts.JsDoc.getJsDocTagsFromDeclarations([declaration]);
+        if (tags.length === 0 || hasJSDocInheritDocTag(declaration)) {
+            var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { var _a; return ((_a = symbol.declarations) === null || _a === void 0 ? void 0 : _a.length) === 1 ? symbol.getJsDocTags() : undefined; });
+            if (inheritedTags) {
+                tags = __spreadArray(__spreadArray([], inheritedTags), tags);
+            }
         }
         return tags;
diff --git a/lib/tsserverlibrary.js b/lib/tsserverlibrary.js
index v4.2.3..v4.2.4 100644
--- a/lib/tsserverlibrary.js
+++ b/lib/tsserverlibrary.js
@@ -291,5 +291,5 @@
     /** The version of the TypeScript compiler release */
     // eslint-disable-next-line @typescript-eslint/no-inferrable-types
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     /* @internal */
     var Comparison;
@@ -7200,5 +7200,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -7207,4 +7206,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -47178,5 +47178,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
@@ -148989,5 +148991,5 @@
         SignatureObject.prototype.getJsDocTags = function () {
             if (this.jsDocTags === undefined) {
-                this.jsDocTags = this.declaration ? getJsDocTags([this.declaration], this.checker) : [];
+                this.jsDocTags = this.declaration ? getJsDocTagsOfSignature(this.declaration, this.checker) : [];
             }
             return this.jsDocTags;
@@ -149003,13 +149005,11 @@
         return ts.getJSDocTags(node).some(function (tag) { return tag.tagName.text === \\"inheritDoc\\"; });
     }
-    function getJsDocTags(declarations, checker) {
-        var tags = ts.JsDoc.getJsDocTagsFromDeclarations(declarations);
-        if (tags.length === 0 || declarations.some(hasJSDocInheritDocTag)) {
-            ts.forEachUnique(declarations, function (declaration) {
-                var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { return symbol.getJsDocTags(); });
-                if (inheritedTags) {
-                    tags = __spreadArray(__spreadArray([], inheritedTags), tags);
-                }
-            });
+    function getJsDocTagsOfSignature(declaration, checker) {
+        var tags = ts.JsDoc.getJsDocTagsFromDeclarations([declaration]);
+        if (tags.length === 0 || hasJSDocInheritDocTag(declaration)) {
+            var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { var _a; return ((_a = symbol.declarations) === null || _a === void 0 ? void 0 : _a.length) === 1 ? symbol.getJsDocTags() : undefined; });
+            if (inheritedTags) {
+                tags = __spreadArray(__spreadArray([], inheritedTags), tags);
+            }
         }
         return tags;
diff --git a/lib/typescript.js b/lib/typescript.js
index v4.2.3..v4.2.4 100644
--- a/lib/typescript.js
+++ b/lib/typescript.js
@@ -291,5 +291,5 @@
     /** The version of the TypeScript compiler release */
     // eslint-disable-next-line @typescript-eslint/no-inferrable-types
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     /* @internal */
     var Comparison;
@@ -7200,5 +7200,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -7207,4 +7206,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -47178,5 +47178,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
@@ -148989,5 +148991,5 @@
         SignatureObject.prototype.getJsDocTags = function () {
             if (this.jsDocTags === undefined) {
-                this.jsDocTags = this.declaration ? getJsDocTags([this.declaration], this.checker) : [];
+                this.jsDocTags = this.declaration ? getJsDocTagsOfSignature(this.declaration, this.checker) : [];
             }
             return this.jsDocTags;
@@ -149003,13 +149005,11 @@
         return ts.getJSDocTags(node).some(function (tag) { return tag.tagName.text === \\"inheritDoc\\"; });
     }
-    function getJsDocTags(declarations, checker) {
-        var tags = ts.JsDoc.getJsDocTagsFromDeclarations(declarations);
-        if (tags.length === 0 || declarations.some(hasJSDocInheritDocTag)) {
-            ts.forEachUnique(declarations, function (declaration) {
-                var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { return symbol.getJsDocTags(); });
-                if (inheritedTags) {
-                    tags = __spreadArray(__spreadArray([], inheritedTags), tags);
-                }
-            });
+    function getJsDocTagsOfSignature(declaration, checker) {
+        var tags = ts.JsDoc.getJsDocTagsFromDeclarations([declaration]);
+        if (tags.length === 0 || hasJSDocInheritDocTag(declaration)) {
+            var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { var _a; return ((_a = symbol.declarations) === null || _a === void 0 ? void 0 : _a.length) === 1 ? symbol.getJsDocTags() : undefined; });
+            if (inheritedTags) {
+                tags = __spreadArray(__spreadArray([], inheritedTags), tags);
+            }
         }
         return tags;
diff --git a/lib/typescriptServices.js b/lib/typescriptServices.js
index v4.2.3..v4.2.4 100644
--- a/lib/typescriptServices.js
+++ b/lib/typescriptServices.js
@@ -291,5 +291,5 @@
     /** The version of the TypeScript compiler release */
     // eslint-disable-next-line @typescript-eslint/no-inferrable-types
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     /* @internal */
     var Comparison;
@@ -7200,5 +7200,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -7207,4 +7206,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -47178,5 +47178,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
@@ -148989,5 +148991,5 @@
         SignatureObject.prototype.getJsDocTags = function () {
             if (this.jsDocTags === undefined) {
-                this.jsDocTags = this.declaration ? getJsDocTags([this.declaration], this.checker) : [];
+                this.jsDocTags = this.declaration ? getJsDocTagsOfSignature(this.declaration, this.checker) : [];
             }
             return this.jsDocTags;
@@ -149003,13 +149005,11 @@
         return ts.getJSDocTags(node).some(function (tag) { return tag.tagName.text === \\"inheritDoc\\"; });
     }
-    function getJsDocTags(declarations, checker) {
-        var tags = ts.JsDoc.getJsDocTagsFromDeclarations(declarations);
-        if (tags.length === 0 || declarations.some(hasJSDocInheritDocTag)) {
-            ts.forEachUnique(declarations, function (declaration) {
-                var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { return symbol.getJsDocTags(); });
-                if (inheritedTags) {
-                    tags = __spreadArray(__spreadArray([], inheritedTags), tags);
-                }
-            });
+    function getJsDocTagsOfSignature(declaration, checker) {
+        var tags = ts.JsDoc.getJsDocTagsFromDeclarations([declaration]);
+        if (tags.length === 0 || hasJSDocInheritDocTag(declaration)) {
+            var inheritedTags = findBaseOfDeclaration(checker, declaration, function (symbol) { var _a; return ((_a = symbol.declarations) === null || _a === void 0 ? void 0 : _a.length) === 1 ? symbol.getJsDocTags() : undefined; });
+            if (inheritedTags) {
+                tags = __spreadArray(__spreadArray([], inheritedTags), tags);
+            }
         }
         return tags;
diff --git a/lib/typingsInstaller.js b/lib/typingsInstaller.js
index v4.2.3..v4.2.4 100644
--- a/lib/typingsInstaller.js
+++ b/lib/typingsInstaller.js
@@ -86,5 +86,5 @@
     /** The version of the TypeScript compiler release */
     // eslint-disable-next-line @typescript-eslint/no-inferrable-types
-    ts.version = \\"4.2.3\\";
+    ts.version = \\"4.2.4\\";
     /* @internal */
     var Comparison;
@@ -6995,5 +6995,4 @@
             var activeSession;
             var profilePath = \\"./profile.cpuprofile\\";
-            var realpathSync = (_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync;
             var Buffer = require(\\"buffer\\").Buffer;
             var nodeVersion = getNodeMajorVersion();
@@ -7002,4 +7001,5 @@
             var platform = _os.platform();
             var useCaseSensitiveFileNames = isFileSystemCaseSensitive();
+            var realpathSync = useCaseSensitiveFileNames ? ((_a = _fs.realpathSync.native) !== null && _a !== void 0 ? _a : _fs.realpathSync) : _fs.realpathSync;
             var fsSupportsRecursiveFsWatch = isNode4OrLater && (process.platform === \\"win32\\" || process.platform === \\"darwin\\");
             var getCurrentDirectory = ts.memoize(function () { return process.cwd(); });
@@ -46973,5 +46973,7 @@
             typeCount++;
             result.id = typeCount;
-            typeCatalog.push(result);
+            if (ts.tracing) {
+                typeCatalog.push(result);
+            }
             return result;
         }
"
`;
